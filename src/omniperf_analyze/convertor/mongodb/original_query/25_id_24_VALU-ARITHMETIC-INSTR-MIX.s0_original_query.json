[
    {"$match": {
        "Index": { "$in": [${DispatchIDFilter:raw}] },
        "gpu-id": { "$in": [${gpuFilter:raw}] },
        "KernelName": { "$in": ${KernelNameFilter:json}}
    }},
    {"$addFields": {
        "denom": {
               "$switch" : {
                  "branches": [
                     {
                          "case":  { "$eq": [ $normUnit, "per Wave"]} ,
                          "then":  "&SQ_WAVES"
                     },
                     {
                          "case":  { "$eq": [ $normUnit, "per Cycle"]} ,
                          "then":  "&GRBM_GUI_ACTIVE"
                     },
                     {
                          "case":  { "$eq": [ $normUnit, "per Sec"]} ,
                          "then":  {"$divide":[{"$subtract": ["&EndNs", "&BeginNs" ]}, 1000000000]}
                     }
                  ],
                 "default": 1
               }         
        } 
    }},

    {"$group": {
        "_id": null,
        "count_int_i32": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_INT32", "&denom" ] }
        },
        "count_int_i64": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_INT64", "&denom" ] }
        },
        "count_f16_add": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_ADD_F16", "&denom" ] }
        },
        "count_f16_MUL": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_MUL_F16", "&denom" ] }
        },
        "count_f16_fma": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_FMA_F16", "&denom" ] }
        },
        "count_f16_trans": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_TRANS_F16", "&denom" ] }
        },
        "count_f32_add": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_ADD_F32", "&denom" ] }
        },
        "count_f32_MUL": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_MUL_F32", "&denom" ] }
        },
        "count_f32_fma": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_FMA_F32", "&denom" ] }
        },
        "count_f32_trans": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_TRANS_F32", "&denom" ] }
        },
        "count_f64_add": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_ADD_F64", "&denom" ] }
        },
        "count_f64_MUL": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_MUL_F64", "&denom" ] }
        },
        "count_f64_fma": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_FMA_F64", "&denom" ] }
        },
        "count_f64_trans": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_TRANS_F64", "&denom" ] }
        },
        "conversion": {
          "$avg": { "$divide": [ "&SQ_INSTS_VALU_CVT", "&denom" ] }
        }
      }
    },
    {"$set": {
      "array": [
          {
            "metric": "INT32",
            "count": "&count_int_i32"
          },
          {
            "metric": "INT64",
            "count": "&count_int_i64"
          },
          {
            "metric": "F16-ADD",
            "count": "&count_f16_add"
          },
          {
            "metric": "F16-MUL",
            "count": "&count_f16_MUL"
          },
          {
            "metric": "F16-FMA",
            "count": "&count_f16_fma"
          },
          {
            "metric": "F16-Trans",
            "count": "&count_f16_trans"
          },
          {
            "metric": "F32-ADD",
            "count": "&count_f32_add"
          },
          {
            "metric": "F32-MUL",
            "count": "&count_f32_MUL"
          },
          {
            "metric": "F32-FMA",
            "count": "&count_f32_fma"
          },
          {
            "metric": "F32-Trans",
            "count": "&count_f32_trans"
          },
          {
            "metric": "F64-ADD",
            "count": "&count_f64_add"
          },
          {
            "metric": "F64-MUL",
            "count": "&count_f64_MUL"
          },
          {
            "metric": "F64-FMA",
            "count": "&count_f64_fma"
          },
          {
            "metric": "F64-Trans",
            "count": "&count_f64_trans"
          },
          {
            "metric": "Conversion",
            "count": "&conversion"
          }
        ]
    }},
    {"$unwind": {
      "path": "&array"
    }},
    {"$replaceRoot": {
      "newRoot": "&array"
    }}
  ]
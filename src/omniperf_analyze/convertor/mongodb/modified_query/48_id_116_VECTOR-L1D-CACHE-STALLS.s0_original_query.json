[
    {"$match": {
        "Index": { "$in": [${DispatchIDFilter:raw}] },
        "gpu-id": { "$in": [${gpuFilter:raw}] },
        "KernelName": { "$in": ${KernelNameFilter:json}}
    }},
    {"$group": {
        "_id": null,

            "l2Pending_avg": {"$avg": {
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_PENDING_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
            "l2Pending_min": {"$min": {
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_PENDING_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
            "l2Pending_max": {"$max": {
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_PENDING_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},


            "tcr2tcp_Stall_avg":{"$avg":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_TCR_TCP_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
            "tcr2tcp_Stall_min":{"$min":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_TCR_TCP_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
            "tcr2tcp_Stall_max":{"$max":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_TCR_TCP_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
             
            "readTagRam_Stall_avg": {"$avg":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_READ_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"]},
                    null
                ]
            }},
            "readTagRam_Stall_min": {"$min":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_READ_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"]},
                    null
                ]
            }},
            "readTagRam_Stall_max": {"$max":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_READ_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"]},
                    null
                ]
            }},
            
            "writeTagRam_Stall_avg": {"$avg":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_WRITE_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
            "writeTagRam_Stall_min": {"$min":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_WRITE_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
            "writeTagRam_Stall_max": {"$max":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_WRITE_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }},
            
            
            "atomicTagRam_Stall_avg":{"$avg":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_ATOMIC_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }}, 
            "atomicTagRam_Stall_min":{"$min":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_ATOMIC_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }}, 
            "atomicTagRam_Stall_max":{"$max":{
                "$cond":[
                    {"$ne": ["&TCP_GATE_EN1_sum", 0]}, 
                    {"$divide": [ { "$multiply": [100, "&TCP_ATOMIC_TAGCONFLICT_STALL_CYCLES_sum"] }, "&TCP_GATE_EN1_sum"] },
                    null
                ]
            }} 

    }},
    {"$set": {
        "array": [
            {
            "Metric": "Stalled on L2 Data",
            "Mean": "&l2Pending_avg",
            "Min":  "&l2Pending_min",
            "Max":  "&l2Pending_max",
            "unit":"pct"
            },
            {
            "Metric": "Stalled on L2 Req",
            "Mean": "&tcr2tcp_Stall_avg",
            "Min":"&tcr2tcp_Stall_min",
            "Max":"&tcr2tcp_Stall_max",
            "unit":"pct"
            },
            {
            "Metric": "Tag RAM Stall (Read)",
            "Mean": "&readTagRam_Stall_avg",
            "Min":  "&readTagRam_Stall_min",
            "Max":  "&readTagRam_Stall_max",
            "unit":"pct"
            },
            {
            "Metric": "Tag RAM Stall (Write)",
            "Mean": "&writeTagRam_Stall_avg",
            "Min":  "&writeTagRam_Stall_min",
            "Max":  "&writeTagRam_Stall_max",
            "unit":"pct"
            },
            {
            "Metric": "Tag RAM Stall (Atomic)",
            "Mean": "&atomicTagRam_Stall_avg",
            "Min":  "&atomicTagRam_Stall_min",
            "Max":  "&atomicTagRam_Stall_max",
            "unit":"pct"
            }
        ]
    }},
    {"$unwind": {
        "path": "&array"
    }},
    {"$replaceRoot": {
        "newRoot": "&array"
    }}
]